(function(e,t){typeof exports==`object`&&typeof module<`u`?t(exports):typeof define==`function`&&define.amd?define([`exports`],t):(e=typeof globalThis<`u`?globalThis:e||self,t(e.DOMShield={}))})(this,function(exports){exports.CSPMonitor=class{endpoint;isEnabled=!1;reportQueue=[];maxQueueSize=100;constructor(e=`/csp-violations`){this.endpoint=e,this.init()}init(){document.addEventListener(`securitypolicyviolation`,e=>{this.handleCSPViolation(e)}),console.log(`🛡️ DOM Shield CSP Monitor initialized`),console.log(`📍 Reports will be sent to: ${this.endpoint}`)}async handleCSPViolation(e){let t={timestamp:new Date().toISOString(),userAgent:navigator.userAgent,url:window.location.href,violation:{"blocked-uri":e.blockedURI||``,"document-uri":e.documentURI||``,"effective-directive":e.effectiveDirective||``,"original-policy":e.originalPolicy||``,referrer:e.referrer||``,"script-sample":e.sample||``,"status-code":e.statusCode||0,"violated-directive":e.violatedDirective||``},additionalInfo:{lineNumber:e.lineNumber,columnNumber:e.columnNumber,sourceFile:e.sourceFile}};console.warn(`🚨 CSP Violation detected:`,t),this.addToQueue(t),this.isEnabled&&await this.sendReport(t)}addToQueue(e){this.reportQueue.push(e),this.reportQueue.length>this.maxQueueSize&&this.reportQueue.shift()}async sendReport(e){try{let t=await fetch(this.endpoint,{method:`POST`,headers:{"Content-Type":`application/json`},body:JSON.stringify(e)});return t.ok?(console.log(`✅ CSP violation report sent successfully`),!0):(console.error(`❌ Failed to send CSP report:`,t.status),!1)}catch(e){return console.error(`❌ Error sending CSP report:`,e),!1}}enable(){this.isEnabled=!0,console.log(`✅ CSP monitoring enabled`),this.reportQueue.length>0&&(console.log(`📤 Sending ${this.reportQueue.length} queued reports...`),this.reportQueue.forEach(e=>this.sendReport(e)))}disable(){this.isEnabled=!1,console.log(`⏸️ CSP monitoring disabled`)}getQueuedReports(){return[...this.reportQueue]}clearQueue(){let e=this.reportQueue.length;this.reportQueue=[],console.log(`🗑️ Cleared ${e} queued CSP reports`)}async sendQueuedReports(){if(this.reportQueue.length===0){console.log(`📭 No queued reports to send`);return}console.log(`📤 Sending ${this.reportQueue.length} queued reports...`);for(let e of this.reportQueue)if(await this.sendReport(e)){let t=this.reportQueue.indexOf(e);t>-1&&this.reportQueue.splice(t,1)}}getStatus(){return{enabled:this.isEnabled,endpoint:this.endpoint,queuedReports:this.reportQueue.length,maxQueueSize:this.maxQueueSize}}},exports.securityRules=[{rule:`ParanaUserScript`,execute:()=>{document.querySelector(`.gemini-box`)?(console.log(`🚨 DOM Shield: ParanaUserScript detected!`),console.warn(`Potentially suspicious element found: .gemini-box`)):console.log(`✅ DOM Shield: ParanaUserScript check passed`)}},{rule:`SuspiciousScripts`,execute:()=>{let e=document.querySelectorAll(`script[src]`),t=[`suspicious-site.com`,`malware.example`];e.forEach(e=>{let n=e.src;t.some(e=>n.includes(e))&&console.warn(`🚨 DOM Shield: Suspicious script detected:`,n)})}},{rule:`IframeDetection`,execute:()=>{let e=document.querySelectorAll(`iframe`);e.length>0&&(console.log(`🔍 DOM Shield: Found ${e.length} iframe(s)`),e.forEach((e,t)=>{let n=e.src;console.log(`  Iframe ${t+1}: ${n||`No src attribute`}`)}))}}]});